server {
	listen 80;
	listen [::]:80;
	server_name {{ jellyfin_domain }};
	add_header Content-Security-Policy "default-src 'none';";

	return 301 https://{{ jellyfin_domain }};
	access_log off;
}
####
# Set headers to keep contents in client cache.
# This reduces server load and speeds up browsing.
# You need to connect to this per site (server block).
# It's best to avoid caching all of "~applications/" or else various site functions will break.
# This one is specific to Jellyfin.
####
map $sent_http_content_type $jf_content {
	# Undefined content is off
	"default" "";
	# HTML gets unique define
	"text/html" ", epoch";
	# Text content, 30 days / 1 month
	"text/javascript" ", max-age=2592000";
	"text/css" ", max-age=2592000";
	# Fonts, 365 days / 12 months
	"application/vnd.ms-fontobject" ", max-age=31536000";
	"application/font-woff" ", max-age=31536000";
	"application/x-font-truetype" ", max-age=31536000";
	"application/x-font-opentype" ", max-age=31536000";
	"~font/" "max-age=31536000";
	# Media, 180 days / 6 months
	# You don't want to send cache responses for video or audio.
	"~image/" ", max-age=15552000";
}

log_format main [$time_local] ' $status' ' $request_time' ' $remote_user' ' $remote_addr' ' "$request" $body_bytes_sent' ' "$http_referer" "$http_user_agent"';
proxy_cache_path /var/cache/nginx/jellyfin levels=1:2 keys_zone=jellyfin:256m max_size=15g inactive=30d use_temp_path=off;

server {
	listen 443 ssl;
	listen [::]:443 ssl;
	# http2 on;
	# HTTP3 ONLY
	#listen 443 quic reuseport;
	#listen [::]:443 quic reuseport;
	#quic_retry on;
	#ssl_early_data on;
	#http3 on;
	#http3_hq off;

	server_name {{ jellyfin_domain }};

	set $jellyfin 127.0.0.1;

	keepalive_timeout 60;

	ssl_protocols TLSv1.3; # Modern only.
	ssl_prefer_server_ciphers on; # Sever will use the best cipher from OpenSSL
	ssl_session_tickets off;
	ssl_session_timeout 24h;
	ssl_ecdh_curve secp256r1;
	ssl_buffer_size 4k;
	ssl_stapling on;
	ssl_stapling_verify on;
	resolver 1.1.1.1 1.0.0.1 valid=300s;
	ssl_session_cache shared:dotmesecure:10m;
	ssl_certificate     /etc/letsencrypt/live/{{- jellyfin_domain -}}/cert.pem;
	ssl_certificate_key /etc/letsencrypt/live/{{- jellyfin_domain -}}/privkey.pem;

	add_header Content-Security-Policy "base-uri 'none'; connect-src 'self'; default-src 'none'; font-src 'self' data:; form-action 'self'; frame-ancestors 'self'; frame-src 'self'; img-src 'self' blob: data: https:; manifest-src 'self'; media-src 'self' blob:; object-src 'none'; script-src 'self' 'unsafe-inline' blob:; script-src-elem 'self' https://www.gstatic.com/cv/js/sender/v1/cast_sender.js https://www.gstatic.com/eureka/clank/ blob:; style-src 'self' 'unsafe-inline'; worker-src 'self' blob:;";

	add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
	add_header X-Frame-Options SAMEORIGIN always;
	add_header X-Content-Type-Options nosniff;
	add_header Referrer-Policy strict-origin-when-cross-origin;
	add_header Alt-Svc 'h3-29=":$server_port"; ma=86400, h3=":$server_port"; ma=86400';
	add_header X-protocol $server_protocol always;

	add_header Cache-Control "private$jf_content";

	access_log /var/log/nginx/jellyfin.log main buffer=32k flush=5m;

	if ($request_method !~ ^(GET|HEAD|POST|DELETE)$ ) {
		return 405;
	}

	sendfile on;
	tcp_nopush on;

	location = / {
		return 301 https://$host/web/;
	}

	location / {
		proxy_pass http://$jellyfin:8096;
		proxy_http_version 1.1;
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
		proxy_set_header X-Forwarded-Protocol $scheme;
		proxy_set_header X-Forwarded-Host $http_host;
		proxy_buffering on;
		proxy_buffers 16 4k;
		proxy_buffer_size 4k;
		proxy_busy_buffers_size 8k;
		proxy_temp_file_write_size 8k;
		proxy_max_temp_file_size 16k;
		proxy_connect_timeout 60s;
		proxy_send_timeout 60s;
		proxy_read_timeout 60s;
		#proxy_ssl_certificate /etc/nginx/jellyfin/cert.pem;
		#proxy_ssl_certificate_key /etc/nginx/jellyfin/priv.key;
		#proxy_ssl_protocols TLSv1.2 TLSv1.3;
		#proxy_ssl_session_reuse on;
	}
	location = /web/ {
		proxy_pass http://$jellyfin:8096/web/index.html;
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
		proxy_set_header X-Forwarded-Protocol $scheme;
		proxy_set_header X-Forwarded-Host $http_host;
	}
	location /socket {
		proxy_pass http://$jellyfin:8096;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "upgrade";
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
		proxy_set_header X-Forwarded-Protocol $scheme;
		proxy_set_header X-Forwarded-Host $http_host;
		proxy_connect_timeout 60s;
		proxy_send_timeout 60s;
		proxy_read_timeout 60s;
	}
	location ~ /Items/(.*)/Images {
		proxy_pass http://$jellyfin:8096;
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
		proxy_set_header X-Forwarded-Protocol $scheme;
		proxy_set_header X-Forwarded-Host $http_host;
		proxy_cache jellyfin;
		proxy_cache_revalidate on;
		proxy_cache_lock on;
		add_header X-Cache-Status $upstream_cache_status; # This is only to check if cache is working
	}
	location ~\.(pl|cgi|py|sh|lua|asp|php)$ {
		return 444;
	}
	location ~ /\. {
		return 444;
	}
}